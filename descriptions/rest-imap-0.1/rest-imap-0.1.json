{
    "openapi": "3.0.0",
    "info": {
        "contact": {
            "name": "conjoon Open Source Project",
            "url": "http://conjoon.org",
            "email": "thorsten@suckow-homberg.de"
        },
        "version": "0.1",
        "title": "conjoon/rest-imap",
        "license": {
            "name": "MIT"
        },
        "description": "API specifications for accessing IMAP servers"
    },
    "servers": [
        {
            "url": "{protocol}://{hostname}/rest-imap/api/v0.1",
            "variables": {
                "hostname": {
                    "description": "Self-hosted Server",
                    "default": "HOSTNAME"
                },
                "protocol": {
                    "description": "Self-hostedServer protocol",
                    "default": "https"
                }
            }
        }
    ],
    "paths": {
        "/MailAccounts": {
            "get": {
                "tags": [
                    "MailAccounts"
                ],
                "summary": "Lists mail accounts",
                "description": "Lists available mail accounts for the specified login",
                "operationId": "mailAccounts",
                "responses": {
                    "200": {
                        "description": "Available MailAccounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MailAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MailAccounts/{mailAccountId}/MailFolders": {
            "get": {
                "tags": [
                    "MailFolders"
                ],
                "summary": "List mail boxes",
                "description": "Returns all available mail boxes belonging to a specific mail account",
                "operationId": "mailFolders",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/mailAccountId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available MailFolders belonging to a specific MailAccount",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MailFolder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MailAccounts/{mailAccountId}/MailFolders/{mailFolderId}/MessageItems": {
            "get": {
                "tags": [
                    "MessageItems"
                ],
                "summary": "Returns a list of MessageItems",
                "description": "Returns a list of all MessageItems for the MailAccount with the specified `mailAccountId` found in the mailbox with the id `mailFolderId`. This response returns a list of MessageItems in the boundaries of `start` and `start + limit`; meta-information in the response need to contain the current number of unread messages in the queried mailbox along with the mailbox's identifier (`mailFolderId`) and the associated account (`mailAccountId`) itself. \n<br>\n*** The fields `mailFolderId`, `mailAccountId` and `id` must always be available with the response.***\n\n### Field Configurations\n- `previewTextLength`\n        <br>The `previewText`-field can be configured with the desired length of the preview-text the client expects. \n ```\n?fields=previewText&previewTextLength=200 // Preview Text is returned with a max. of 200 characters.\n?previewTextLength=200 // Preview Text is returned with a max. of 200 characters.\n?excludeFields=previewText&previewTextLength=200 // previewTextLength is ignored by API\n\n```\n\n### Mutually Exclusives\n - The parameters `fields` and `excludeFields` are mutually exclusive. `mailFolderId`, `mailAccountId` and `id` are ignored as values\n ```\n?fields=previewText,flagged // HTTP Status 200\n?excludeFields=previewText // HTTP Status 200\n?fields=previewText&excludeFields=subject // HTTP Status 400\n```\n - The parameter-group `limit`/`start` and `messageItemIds` are mutually exclusive. If `messageItemIds` is specified, `limit` and or `start` must not be present\n```\n?limit=50&start=100\n?limit=50&start=100&messageItemIds=4,554,221 // yields HTTP Status 400\n```\n ",
                "operationId": "getMessageItems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/mailAccountId"
                    },
                    {
                        "$ref": "#/components/parameters/mailFolderId"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "\"[{\\\"property\\\":\\\"date\\\",\\\"direction\\\":\\\"DESC\\\"}]\""
                        },
                        "description": "A json-encoded object containing one or multiple sort informations"
                    },
                    {
                        "schema": {
                            "type": "array"
                        },
                        "in": "query",
                        "name": "fields",
                        "description": "The list of fields to retrieve for the message item. Will return all fields if omitted."
                    },
                    {
                        "schema": {
                            "type": "array"
                        },
                        "in": "query",
                        "name": "excludeFields",
                        "description": "An array of fields to exclude from the response. "
                    },
                    {
                        "schema": {
                            "type": "array"
                        },
                        "in": "query",
                        "name": "messageItemIds",
                        "description": "A list of unique ids of the MessageItems that should be returned for this resource."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "previewTextLength",
                        "description": "The length of the previewText the client expects. Defaults to 200. Field is ignored if `previewText` is found in `excludeFields`"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "cn_unreadCount": {
                                                    "type": "integer",
                                                    "description": "The number of unread messages the mailbox contains"
                                                },
                                                "mailFolderId": {
                                                    "type": "string"
                                                },
                                                "mailAccountId": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MessageItem"
                                        }
                                    }
                                },
                                "examples": {
                                    "example-1": {
                                        "value": {
                                            "success": true,
                                            "total": 0,
                                            "meta": {
                                                "cn_unreadCount": 0,
                                                "mailFolderId": "string",
                                                "mailAccountId": "string"
                                            },
                                            "data": {
                                                "date": {},
                                                "from": "string",
                                                "seen": true,
                                                "answered": true,
                                                "flagged": true,
                                                "draft": true,
                                                "recent": true,
                                                "hasAttachments": true,
                                                "to": [
                                                    {
                                                        "name": "string",
                                                        "address": "string"
                                                    }
                                                ],
                                                "previewText": "string",
                                                "size": 0,
                                                "cn_deleted": true,
                                                "cn_moved": true,
                                                "id": "string",
                                                "mailAccountId": "string",
                                                "mailFolderId": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {}
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "properties": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MessageDraft"
                ],
                "summary": "Creates a new draft",
                "description": "Creates a new draft for the specified MailAccount and stores it in the MailBox with the specified mailFolderId",
                "operationId": "postMessageBodyDraft",
                "parameters": [
                    {
                        "name": "target",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MessageBodyDraft"
                            ]
                        }
                    },
                    {
                        "$ref": "#/components/parameters/mailAccountId"
                    },
                    {
                        "$ref": "#/components/parameters/mailFolderId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created MessageBodyDraft",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MessageBodyDraft"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MailAccounts/{mailAccountId}/MailFolders/{mailFolderId}/MessageItems/{messageItemId}&target=MessageBody": {
            "get": {
                "tags": [
                    "MessageBody"
                ],
                "summary": "Return message body",
                "description": "Returns the MessageBody for the specified key fragments",
                "operationId": "getMessageBody",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/mailAccountId"
                    },
                    {
                        "$ref": "#/components/parameters/mailFolderId"
                    },
                    {
                        "$ref": "#/components/parameters/messageItemId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The MessageBody found for the specified MailAccount, MailFolder and message id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MessageBody"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MailAccounts/{mailAccountId}/MailFolders/{mailFolderId}/MessageItems/{messageItemId}&target=MessageItem": {
            "get": {
                "tags": [
                    "MessageItem"
                ],
                "summary": "Return message item",
                "description": "Returns the MessageItem for the specified key fragments.\n<br>The query parameters `fields` and `excludeFields` are mutually exclusive.",
                "operationId": "getMessageItem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/mailAccountId"
                    },
                    {
                        "$ref": "#/components/parameters/mailFolderId"
                    },
                    {
                        "$ref": "#/components/parameters/messageItemId"
                    },
                    {
                        "schema": {
                            "type": "array"
                        },
                        "in": "query",
                        "description": "The list of fields to retrieve for the message item. Will return all fields if omitted.",
                        "name": "fields"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "excludeFields",
                        "description": "An array of fields to exclude from the response. "
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The MessageItem found for the specified MailAccount, MailFolder and message id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MessageItem"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MessageItem"
                ],
                "summary": "Updates MessageItem",
                "description": "Updates the specific MessageItem with the submitted information.",
                "operationId": "putMessageItem",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/mailAccountId"
                    },
                    {
                        "$ref": "#/components/parameters/mailFolderId"
                    },
                    {
                        "$ref": "#/components/parameters/messageItemId"
                    },
                    {
                        "name": "origin",
                        "required": false,
                        "description": "Required to let the server know that the operation on the MessageItem is related to a recently created message, i.e. if the request is chained by creating a MessageDraft, for which now the envlope informations should be updated.",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "create"
                            ]
                        }
                    },
                    {
                        "name": "action",
                        "required": false,
                        "description": "Requests a move operation for the specified MessageItem. Requires additional query-parameter `mailFolderId`",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "move"
                            ]
                        }
                    },
                    {
                        "name": "mailFolderId",
                        "required": false,
                        "description": "A new location for the MessageItem, if `action` represents a `move`-operation. Not to be confused with the path-parameter `{mailFolderId}`, which is required to identify the resource. The response must contain the MesageItem for this type of request.",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "seen",
                        "required": false,
                        "description": "Marks the MessageItem as seen/unseen",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "flagged",
                        "required": false,
                        "description": "Marks the MessageItem as flagged/unflagged",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "draft",
                        "required": false,
                        "description": "Marks the MessageItem as a draft",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated message information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/putMessageItemResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/moveMessageItemResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "MailAccounts",
            "description": "Endpoints related to reading MailAccounts"
        },
        {
            "name": "MessageDraft",
            "description": "Endpoints related to reading/writing MessageDrafts"
        },
        {
            "name": "MessageItems",
            "description": "Endpoints related to receiving lists of MessageItems"
        },
        {
            "name": "MessageItem",
            "description": "Endpoints related to reading/writing a single MessageItem"
        },
        {
            "name": "MessageBody",
            "description": "Endpoints related to reading/writing a single MessageBody"
        },
        {
            "name": "MailFolders",
            "description": "Endpoints related to reading MailFolders"
        }
    ],
    "components": {
        "parameters": {
            "mailAccountId": {
                "name": "mailAccountId",
                "in": "path",
                "required": true,
                "description": "An id of a MailAccount that should be targeted for the operation",
                "schema": {
                    "type": "string"
                }
            },
            "mailFolderId": {
                "name": "mailFolderId",
                "in": "path",
                "required": true,
                "description": "An id of the MailFolder that should be targeted for the operation",
                "schema": {
                    "type": "string"
                }
            },
            "messageItemId": {
                "name": "messageItemId",
                "in": "path",
                "required": true,
                "description": "The id of the MessageItem that should be targeted for the operation",
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "MailFolder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "mailAccountId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "unreadCount": {
                        "type": "integer"
                    },
                    "folderType": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MailFolder"
                        }
                    }
                }
            },
            "MailAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "folderType": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string"
                    },
                    "replyTo": {
                        "type": "string"
                    },
                    "inbox_type": {
                        "type": "string"
                    },
                    "inbox_address": {
                        "type": "string"
                    },
                    "inbox_port": {
                        "type": "string"
                    },
                    "inbox_user": {
                        "type": "string"
                    },
                    "inbox_password": {
                        "type": "string"
                    },
                    "inbox_ssl": {
                        "type": "boolean"
                    },
                    "outbox_address": {
                        "type": "string"
                    },
                    "outbox_port": {
                        "type": "string"
                    },
                    "outbox_user": {
                        "type": "string"
                    },
                    "outbox_password": {
                        "type": "string"
                    },
                    "outbox_ssl": {
                        "type": "boolean"
                    }
                }
            },
            "MessageBody": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/compoundKey"
                    }
                ],
                "type": "object",
                "properties": {
                    "textHtml": {
                        "type": "string"
                    },
                    "textPlain": {
                        "type": "string"
                    }
                }
            },
            "MessageBodyDraft": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/compoundKey"
                    }
                ],
                "type": "object",
                "properties": {
                    "textHtml": {
                        "type": "string"
                    },
                    "textPlain": {
                        "type": "string"
                    }
                }
            },
            "MessageItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/compoundKey"
                    }
                ],
                "type": "object",
                "properties": {
                    "date": {
                        "type": "object"
                    },
                    "from": {
                        "type": "string"
                    },
                    "seen": {
                        "type": "boolean"
                    },
                    "answered": {
                        "type": "boolean"
                    },
                    "flagged": {
                        "type": "boolean"
                    },
                    "draft": {
                        "type": "boolean"
                    },
                    "recent": {
                        "type": "boolean"
                    },
                    "hasAttachments": {
                        "type": "boolean"
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "address": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "previewText": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "cn_deleted": {
                        "type": "boolean"
                    },
                    "cn_moved": {
                        "type": "boolean"
                    }
                }
            },
            "putMessageItemResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/compoundKey"
                    }
                ],
                "type": "object",
                "properties": {
                    "seen": {
                        "type": "boolean"
                    },
                    "flagged": {
                        "type": "boolean"
                    }
                }
            },
            "moveMessageItemResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MessageItem"
                    }
                }
            },
            "compoundKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "mailAccountId": {
                        "type": "string"
                    },
                    "mailFolderId": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "BasicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "BasicAuth": []
        }
    ]
}